// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Bit.hdl

/**
 * 1-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 *                 else out does not change (out[t+1] = out[t])
 */

CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    /** <Use Mux as Combinatorial Logic>
     *   According to the diagram from the lecture,
     *   Mux gate has two inputs, 'in' and 'dffout'.
     *   Only think about Mux's logic here.
     */
    Mux(a=dffout, b=in, sel=load, out=muxout); // (if load=0) muxout = a(dffout)
                                               // (if load=1) muxout = b(in)
     /** <Implement DFF chip>
      *   DFF has an input from Mux gate (muxout)
      *   The output (dffout) is fed to Mux gate
      */
    DFF(in=muxout, out=dffout); // input Mux's output
    /** To use DFF output again,
      * to avoid error "Can't connect gate's output pin to part",
      * OR gate is used (only affected by DFF output(dffout))
      */
	  Or(a=dffout, b=false, out=out);
}
